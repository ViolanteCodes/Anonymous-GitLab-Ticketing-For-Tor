# Generated by Django 3.1.5 on 2021-01-26 16:59

import anonticket.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GitLabGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text="IMPORTANT: GLGROUPS are AUTOMATICALLY CREATED when a project requiring\n    the group has been added--so you shouldn't have to do anything here!", max_length=200, null=True)),
                ('gitlab_id', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_identifier', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gitlab_id', models.IntegerField(help_text="IMPORTANT: Enter a \n    gitlab ID into this field and save, and the project's details will \n    be fetched from gitlab! NOTHING ELSE ON THIS FORM NEEDS TO BE \n    FILLED IN. Additionally, if a project is saved, a fresh copy of\n    the gitlab details will be fetched and the database entries will\n    be updated.")),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('name_with_namespace', models.CharField(blank=True, max_length=200, null=True)),
                ('short_name_with_namespace', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('gitlab_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='anonticket.gitlabgroup')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(help_text='Type your note body here. You \n            can use <a href=\'https://docs.gitlab.com/ee/user/markdown.html\'\n            target="_blank">\n            GitLab Flavored Markdown (GFM)</a> on this form.', verbose_name='Note Contents')),
                ('issue_iid', models.IntegerField()),
                ('gitlab_id', models.IntegerField(blank=True, null=True)),
                ('gitlab_issue_title', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mod_comment', models.TextField(blank=True, help_text='As a moderator, you can add a comment to this item. \n        Once saved, it will appear on the moderator landing page and can\n        be seen by all moderators, but it will not be seen by users. ', verbose_name='Moderator Comment')),
                ('reviewer_status', models.CharField(choices=[('P', 'Pending Review'), ('A', 'Approved'), ('R', 'Rejected')], default='P', max_length=3)),
                ('posted_to_GitLab', models.BooleanField(default=False)),
                ('linked_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anonticket.project')),
                ('linked_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anonticket.useridentifier')),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('gitlab_iid', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mod_comment', models.TextField(blank=True, help_text='As a moderator, you can add a comment to this item. \n        Once saved, it will appear on the moderator landing page and can\n        be seen by all moderators, but it will not be seen by users. ', verbose_name='Moderator Comment')),
                ('reviewer_status', models.CharField(choices=[('P', 'Pending Review'), ('A', 'Approved'), ('R', 'Rejected')], default='P', max_length=3)),
                ('posted_to_GitLab', models.BooleanField(default=False)),
                ('linked_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anonticket.project')),
                ('linked_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anonticket.useridentifier')),
            ],
        ),
        migrations.CreateModel(
            name='GitlabAccountRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.SlugField(help_text='Type your requested username here. Note that your \n        username MUST start with a letter or number, and that usernames\n        can only use letters (A-Z, a-z), numbers, underscores (_), and \n        hyphens(-).', max_length=64, unique=True, validators=[anonticket.models.check_if_user_in_gitlab])),
                ('email', models.EmailField(max_length=254)),
                ('reason', models.CharField(help_text='Please explain why you want to collaborate with the \n        Tor Community.', max_length=256)),
                ('reviewer_status', models.CharField(choices=[('P', 'Pending Review'), ('A', 'Approved'), ('R', 'Rejected')], default='P', max_length=3)),
                ('approved_to_GitLab', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mod_comment', models.TextField(blank=True, help_text='As a moderator, you can add a comment to this item. \n        Once saved, it will appear on the moderator landing page and can\n        be seen by all moderators, but it will not be seen by users. ', verbose_name='Moderator Comment')),
                ('linked_user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='anonticket.useridentifier')),
            ],
        ),
    ]
